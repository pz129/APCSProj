{% extends "base.html.twig" %}
{% block body %}
<div class="full" style="align:center;">
	<h1 class="full row" style="text-align:center">
		Input your data below!
	</h1>
	<p>This site allows you to submit a text dataset to run in a neural network and see the results in real time!</p>
	
	<form name="form" style="width:100%;margin:25px 0px;" method="post">
	<div style="display:flex;flex-direction:row;flex-wrap:wrap;
				justify-content:center;align-items:center;">
	<p style="color:rgb(255,25,25);margin-bottom:25px;text-align:center;width:100%">{{ message }}</p>
	<!--  <div class="row">File URL: <input id="zip-file" type="text" name="fileurl"></div>-->
	<!--  <div class="row"><p style="text-align:center">Please submit a standard zip file (Use compression file extensions ".tar" and ".zip")</p></div>-->
	<div class="row"><p class="big">Input the xvalues and yvalues below. Seperate each piece of data by a space. <br> Values should be numbers. Each test case should be a new line.</p></div>
	<div class = "row"><textarea style="margin-right:10px" name="xval" cols="75" rows="20" placeholder="x-values ..."></textarea>
	<textarea style="margin-left:10px" name="yval" cols="75" rows="20" placeholder="y-values..."></textarea></div>
	<div class="row"><p class="big">Epochs (input positive integer): </p><input id="epochs" type="text" name="epochs"></div>
	<div class="row"><p class="big">Learning Rate (input positive double): </p><input id="epochs" type="text" name="learnrate"></div>
	<div class="row"><p class="big">Hidden Layer Dimensions (input positive integer for each): </p></div>
	<div class="row">Note: the first layer must be the length of each input string. If your input is longer, it will truncate it, and if it is shorter, it will add spaces to the end.</div> 
	<div id="dims" class="row">
	</div>
	<div class="row"><div onClick="add()" style="border: 1px solid black; border-radius:2px; padding:5px; margin:5px">Add Layer</div>
	</div><br><br>
	<input type="submit" class="btn" value="Submit"><div style="width:100%"></div>
	</div>
	</form>
	<script>
	var dim=[];
	function makeDim(){
		var toFill=document.getElementById("dims");
		toFill.innerHTML="";
		for (var d in dim){
		 	var newDiv=document.createElement('div');
		 	newDiv.setAttribute("class","row");
		 	var newInput=document.createElement('input');
		 	newInput.setAttribute("type","text");
		 	newInput.setAttribute("value",dim[d]);
		 	newInput.setAttribute("oninput","setDim("+d+")");
			newInput.setAttribute("id","dim"+d);
			newInput.setAttribute("name","dim"+d)
			newDiv.appendChild(newInput);
			toFill.appendChild(newDiv);
		}
		
	}
	function rem(ind){
		dim.splice(ind,1);
		makeDim();
	}
	function add(){
		dim.push("1");
		makeDim();
	}
	function setDim(ind){
		dim[ind]=document.getElementById("dim"+ind).value;
	}
	add();
	</script>
	
</div>
{% endblock body %}